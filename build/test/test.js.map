{"version":3,"sources":["../../api/test/test.js"],"names":["chai","use","chatHttp","expect","describe","it","done","user","id","email","first_name","last_name","password","address","is_admin","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","book","price","description","get","should","have","property","bookId","eql","updatedBook","title","put"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../index';\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe('Testing the signUp endpoint:', () => {\n  it('It should create add new user to user list ', (done) => {\n    const user = {\n      id: 2,\n      email: 'mhdmps@gmail.com',\n      first_name: 'Muhammad',\n      last_name: 'semps',\n      password: '123456',\n      address: 'kampala',\n      is_admin: 'True'\n    };\n    chai\n      .request(app)\n      .post('/api/v1/users')\n      .set('Accept', 'application/json')\n      .send(user)\n      .end((err, res) => {\n        expect(res.status).to.equal(201);\n        expect(res.body.data).to.include({\n          id: 2,\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          password: user.password,\n          address: user.address,\n          is_admin: user.is_admin\n        });\n        done();\n      });\n  });\n\n  it('It should not create a book with incomplete parameters', (done) => {\n    const book = {\n      price: '$9.99',\n      description: 'This is the awesome book'\n    };\n    chai\n      .request(app)\n      .post('/api/v1/books')\n      .set('Accept', 'application/json')\n      .send(book)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        done();\n      });\n  });\n\n  it('It should get all books', (done) => {\n    chai\n      .request(app)\n      .get('/api/v1/books')\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data[0].should.have.property('id');\n        res.body.data[0].should.have.property('title');\n        res.body.data[0].should.have.property('price');\n        res.body.data[0].should.have.property('description');\n        done();\n      });\n  });\n\n  it('It should get a particular book', (done) => {\n    const bookId = 1;\n    chai\n      .request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('title');\n        res.body.data.should.have.property('price');\n        res.body.data.should.have.property('description');\n        done();\n      });\n  });\n\n  it('It should not get a particular book with invalid id', (done) => {\n    const bookId = 8888;\n    chai\n      .request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message').eql(`Cannot find book with the id ${bookId}`);\n        done();\n      });\n  });\n\n  it('It should not get a particular book with non-numeric id', (done) => {\n    const bookId = 'aaa';\n    chai\n      .request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n  it('It should update a book', (done) => {\n    const bookId = 1;\n    const updatedBook = {\n      id: bookId,\n      title: 'Updated Awesome book',\n      price: '$10.99',\n      description: 'We have updated the price'\n    };\n    chai\n      .request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data.id).equal(updatedBook.id);\n        expect(res.body.data.title).equal(updatedBook.title);\n        expect(res.body.data.price).equal(updatedBook.price);\n        expect(res.body.data.description).equal(updatedBook.description);\n        done();\n      });\n  });\n\n  it('It should not update a book with invalid id', (done) => {\n    const bookId = '9999';\n    const updatedBook = {\n      id: bookId,\n      title: 'Updated Awesome book again',\n      price: '$11.99',\n      description: 'We have updated the price'\n    };\n    chai\n      .request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message').eql(`Cannot find book with the id: ${bookId}`);\n        done();\n      });\n  });\n\n  it('It should not update a book with non-numeric id value', (done) => {\n    const bookId = 'ggg';\n    const updatedBook = {\n      id: bookId,\n      title: 'Updated Awesome book again',\n      price: '$11.99',\n      description: 'We have updated the price'\n    };\n    chai\n      .request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n  it('It should delete a book', (done) => {\n    const bookId = 1;\n    chai\n      .request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data).to.include({});\n        done();\n      });\n  });\n\n  it('It should not delete a book with invalid id', (done) => {\n    const bookId = 777;\n    chai\n      .request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message').eql(`Book with the id ${bookId} cannot be found`);\n        done();\n      });\n  });\n\n  it('It should not delete a book with non-numeric id', (done) => {\n    const bookId = 'bbb';\n    chai\n      .request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please provide a numeric value');\n        done();\n      });\n  });\n});\n"],"file":"test.js"}